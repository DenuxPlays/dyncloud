[package]
name = "dyncloud"
version = "1.2.3"
authors = ["Timon Klinkert <DenuxPlays@users.noreply.github.com>"]
description = "A programm that handles updating DNS records with your current public IP address for Cloudflare."
license = "GPL-3"
repository = "https://github.com/DenuxPlays/dyncloud"
homepage = "https://github.com/DenuxPlays/dyncloud"
readme = "README.md"
edition = "2021"
rust-version = "1.83.0"

[package.metadata.wix]
upgrade-guid = "2A41DDA9-0B62-4946-BFFC-410B38137366"
path-guid = "EAD2959B-66EC-4A95-BC27-3DF7E4057C47"
license = false
eula = false

[features]
# Enable mimalloc memory allocator to replace the default malloc
# This can improve performance for Alpine builds
enable_mimalloc = ["mimalloc"]

[dependencies]
# Async runtime
tokio = { version = "1.42.0", features = ["rt", "macros", "rt-multi-thread"] }

# File serialization and deserialization
toml = "0.8.19"

# Cloudflare API
cloudflare = { git = "https://github.com/cloudflare/cloudflare-rs", rev = "bea21a7dc592a66f58b0a9276c6e4f1eef379238", features = ["rustls-tls"], default-features = false }

# Logging
log = "0.4.22"
simple_logger = "5.0.0"

# Utils
public-ip = "0.2.2"
serde = { version = "1.0.216", features = ["derive"] }
time = "0.3.37"

# mimalloc
# Replaces musl malloc since it is very slow
mimalloc = { version = "0.1.43", optional = true }

# The profile that 'cargo dist' will build with
[profile.dist]
inherits = "release"
lto = "thin"

# Config for 'dist'
[workspace.metadata.dist]
# The preferred dist version to use in CI (Cargo.toml SemVer syntax)
cargo-dist-version = "0.26.0"
# CI backends to support
ci = "github"
# The installers to generate for each app
installers = ["shell", "powershell", "msi"]
# Target platforms to build apps for (Rust target-triple syntax)
targets = ["aarch64-apple-darwin", "aarch64-unknown-linux-gnu", "aarch64-pc-windows-msvc", "x86_64-apple-darwin", "x86_64-unknown-linux-gnu", "x86_64-unknown-linux-musl", "x86_64-pc-windows-msvc"]
# Path that installers should place binaries in
install-path = "CARGO_HOME"
# Which actions to run on pull requests
pr-run-mode = "plan"
# Whether to install an updater program
install-updater = true
